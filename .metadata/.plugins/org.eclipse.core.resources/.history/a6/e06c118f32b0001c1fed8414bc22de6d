package ar.edu.asap.practica0.modelo.test;


import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import ar.edu.asap.practica0.modelo.Papel;
import ar.edu.asap.practica0.modelo.Piedra;
import ar.edu.asap.practica0.modelo.PiedraPapelTijeraFactory;
import ar.edu.asap.practica0.modelo.Tijera;

class PiedraPapelTijeraFactoryTest {

	Piedra piedra;
	Papel papel;
	Tijera tijera;
	
	@BeforeEach
	void setUp() throws Exception {
		piedra = new Piedra();
		papel = new Papel();
		tijera = new Tijera();
	}

	@AfterEach
	void tearDown() throws Exception {
		piedra = null;
		papel = null;
		tijera = null;
	}


	@Test 
	void testPiedraGanaATijera(){
		assertEquals(1, piedra.comparar(tijera));
	}
	@Test
	void testPiedraGanaATijera_comparar_DescripcionResultado() {
		int result=piedra.comparar(tijera);
		assertEquals("piedra le gana a tijera", piedra.getDescriptionResultado());
	}
	
	@Test 
	void testPiedraPierdeConPapel(){
		assertEquals(-1, piedra.comparar(papel));
	}
	@Test
	void testPiedraPierdeConPapel_comparar_DescripcionResultado() {
		int result=piedra.comparar(papel);
		assertEquals("piedra pierde con papel", piedra.getDescriptionResultado());
	}
	
	@Test 
	void testPiedraEmpataConPiedra(){
		assertEquals(0, piedra.comparar(piedra));
	}
	@Test
	void testPiedraEmpataConPiedra_comparar_DescripcionResultado() {
		int result=piedra.comparar(piedra);
		assertEquals("piedra empata con piedra", piedra.getDescriptionResultado());
	}
	
	@Test
	void testGetInstancePiedra() {
		assertEquals("piedra", PiedraPapelTijeraFactory.getInstance(PiedraPapelTijeraFactory.PIEDRA)
								.getNombre());
	}
	
	
	
	
	@Test 
	void testPapelGanaAPiedra(){
		assertEquals(1, papel.comparar(piedra));
	}
	@Test
	void testPapelGanaAPiedra_comparar_DescripcionResultado() {
		int result=papel.comparar(piedra);
		assertEquals("papel le gana a piedra", papel.getDescriptionResultado());
	}
	
	@Test 
	void testPapelPierdeConTijera(){
		assertEquals(-1, papel.comparar(tijera));
	}
	@Test
	void testPapelPierdeConTijera_comparar_DescripcionResultado() {
		int result=papel.comparar(tijera);
		assertEquals("papel pierde con tijera", papel.getDescriptionResultado());
	}
	
	@Test 
	void testPapelEmpataConPapel(){
		assertEquals(0, papel.comparar(papel));
	}
	@Test
	void testPapelEmpataConPapel_comparar_DescripcionResultado() {
		int result=papel.comparar(papel);
		assertEquals("papel empata con papel", papel.getDescriptionResultado());
	}
	
	@Test
	void testGetInstancePapel() {
		assertEquals("papel", PiedraPapelTijeraFactory.getInstance(PiedraPapelTijeraFactory.PAPEL)
								.getNombre());
	}
	
	
	
	@Test 
	void testTijeraGanaAPapel(){
		assertEquals(1, tijera.comparar(papel));
	}
	@Test
	void testTijeraGanaAPapel_comparar_DescripcionResultado() {
		int result=tijera.comparar(papel);
		assertEquals("tijera le gana a papel", tijera.getDescriptionResultado());
	}
	
	@Test 
	void testTijeraPierdeConPiedra(){
		assertEquals(-1, tijera.comparar(piedra));
	}
	@Test
	void testTijeraPierdeConPiedra_comparar_DescripcionResultado() {
		int result=tijera.comparar(piedra);
		assertEquals("tijera pierde con piedra", tijera.getDescriptionResultado());
	}
	
	@Test 
	void testTijeraEmpataConTijera(){
		assertEquals(0, tijera.comparar(tijera));
	}
	@Test
	void testTijeraEmpataConTijera_comparar_DescripcionResultado() {
		int result=tijera.comparar(tijera);
		assertEquals("tijera empata con tijera", tijera.getDescriptionResultado());
	}
	
	@Test
	void testGetInstanceTijera() {
		assertEquals("tijera", PiedraPapelTijeraFactory.getInstance(PiedraPapelTijeraFactory.TIJERA)
								.getNombre());
	}
	
	

}
